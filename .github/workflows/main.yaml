name: main

on:
  push:
    branches:
      - master-words

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      image_name: ${{ steps.image-name.outputs.image_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v2

      # Set Github Access Token with "write:packages" scope for Github Container Registry.
      # Then go to repository settings and add the copied token as a secret called "CR_PAT"
      # https://github.com/settings/tokens/new?scopes=repo,write:packages&description=Github+Container+Registry
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Generate image name
        id: image-name
        run: |
          BRANCH_NAME="$(echo "$GITHUB_REF" | tr "[:upper:]" "[:lower:]" | sed -r 's#refs/[^\/]*/##;s/[~\^]+//g;s/[^a-zA-Z0-9.]+/-/g;s/^-+\|-+$//g;s/^-*//;s/-*$//' | cut -c1-63)"
          SHORT_SHA="$(echo ${GITHUB_SHA} | cut -c1-7)"
          IMAGE_NAME="${BRANCH_NAME}-${SHORT_SHA}"
          echo "Image name: ${IMAGE_NAME}"
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT

      - name: Push to GHCR
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.image_name }}
            ghcr.io/${{ github.repository }}:latest

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   needs: [ build ]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Connect to DO
  #       uses: matootie/dokube@v1.4.0
  #       with:
  #         personalAccessToken: ${{ secrets.DO_PAT }}
  #         clusterName: k8s-1-25-4-do-0-ams3-1670747617435

  #     - uses: azure/setup-helm@v3
  #       id: install
  #       with:
  #         version: 'v3.10.2'
      
  #     - run: >
  #         helm upgrade 
  #         --atomic 
  #         --create-namespace 
  #         --install 
  #         --namespace words 
  #         --set=image.tag=${{ needs.build.outputs.image_name }}
  #         --wait 
  #         --wait-for-jobs 
  #         words-api ./.helm/words-api